volumes:
  nginx-shared:

services:
  nginx:
    image: nginx:alpine
    hostname: nginx
    ports:
      - "8000:8000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-shared:/nginx
    depends_on:
      web:
        condition: service_healthy

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 5s
      retries: 3

  rabbitmq:
    image: rabbitmq:alpine
    ports:
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready"]
      timeout: 5s
      retries: 3

  web:
    image: safeglobal/safe-transaction-service:latest
    environment:
      # Hardcoded values
      RUN_MIGRATIONS: 1
      PYTHONPATH: /app/
      DJANGO_SETTINGS_MODULE: config.settings.production
      DEBUG: 0
      ETH_L2_NETWORK: 1
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq/
      # Environment secrets
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      ETHEREUM_NODE_URL: ${ETHEREUM_NODE_URL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    working_dir: /app
    ports:
      - "8888:8888"
    volumes:
      - nginx-shared:/nginx
    healthcheck:
      test: ["CMD", "python", "manage.py", "showmigrations", "--plan"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    command: docker/web/run_web.sh

  indexer-worker: &worker
    image: safeglobal/safe-transaction-service:latest
    environment:
      # Hardcoded values
      RUN_MIGRATIONS: 0
      PYTHONPATH: /app/
      DJANGO_SETTINGS_MODULE: config.settings.production
      DEBUG: 0
      ETH_L2_NETWORK: 1
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq/
      WORKER_QUEUES: "default,indexing,processing"
      # Environment secrets
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      ETHEREUM_NODE_URL: ${ETHEREUM_NODE_URL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS}
    depends_on:
      web:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: docker/web/celery/worker/run.sh

  contracts-tokens-worker:
    <<: *worker
    environment:
      # Hardcoded values
      RUN_MIGRATIONS: 0
      PYTHONPATH: /app/
      DJANGO_SETTINGS_MODULE: config.settings.production
      DEBUG: 0
      ETH_L2_NETWORK: 1
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq/
      WORKER_QUEUES: "contracts,tokens"
      # Environment secrets
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      ETHEREUM_NODE_URL: ${ETHEREUM_NODE_URL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS}

  scheduler:
    <<: *worker
    environment:
      # Hardcoded values
      RUN_MIGRATIONS: 0
      PYTHONPATH: /app/
      DJANGO_SETTINGS_MODULE: config.settings.production
      DEBUG: 0
      ETH_L2_NETWORK: 1
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq/
      WORKER_QUEUES: "default,indexing,processing"
      # Environment secrets
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      ETHEREUM_NODE_URL: ${ETHEREUM_NODE_URL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS}
    command: docker/web/celery/scheduler/run.sh

  flower:
    <<: *worker
    environment:
      # Hardcoded values
      RUN_MIGRATIONS: 0
      PYTHONPATH: /app/
      DJANGO_SETTINGS_MODULE: config.settings.production
      DEBUG: 0
      ETH_L2_NETWORK: 1
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq/
      WORKER_QUEUES: "default,indexing,processing"
      # Environment secrets
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      ETHEREUM_NODE_URL: ${ETHEREUM_NODE_URL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS}
    command: docker/web/celery/flower/run.sh
    ports:
      - "5555:5555"
    profiles:
      - debug
