import React, { useState, useEffect } from 'react'
import SafeConnectionForm from './SafeConnectionForm'
import SafeCreationForm from './SafeCreationForm'
import { SafeConnectionForm as SafeConnectionFormData, SafeCreationForm as SafeCreationFormData } from '../lib/onchain'

interface SafeManagementProps {
  onConnect?: (formData: SafeConnectionFormData) => void
  onCreate: (formData: SafeCreationFormData) => void
  onPredict?: (formData: SafeCreationFormData) => void
  loading?: boolean
  predicting?: boolean
  predictedAddress?: string
  userAddress?: string
  className?: string
}

type TabType = 'create' | 'connect'

const SafeManagement: React.FC<SafeManagementProps> = ({
  onConnect,
  onCreate,
  onPredict,
  loading = false,
  predicting = false,
  predictedAddress,
  userAddress,
  className = ""
}) => {
  const [activeTab, setActiveTab] = useState<TabType>('create')

  // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å–æ–∑–¥–∞–Ω–∏—è, –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è, –Ω–æ onConnect –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
  useEffect(() => {
    if (activeTab === 'connect' && !onConnect) {
      setActiveTab('create')
    }
  }, [activeTab, onConnect])

  return (
    <div className={`bg-white rounded-lg shadow ${className}`}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–∞–±–æ–≤ */}
      <div className="border-b border-gray-200">
        <div className="px-6 py-4">
          <h1 className="text-2xl font-bold text-gray-900 mb-2">
            üè¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Safe
          </h1>
          <p className="text-gray-600 text-sm">
            {onConnect ? 
              '–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Safe –º—É–ª—å—Ç–∏—Å–∏–≥ –∫–æ—à–µ–ª–µ–∫ –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É' :
              '–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Safe –º—É–ª—å—Ç–∏—Å–∏–≥ –∫–æ—à–µ–ª–µ–∫'
            }
          </p>
        </div>
        
        {/* –¢–∞–±—ã */}
        <div className="px-6">
          <div className="flex space-x-1">
            <button
              onClick={() => setActiveTab('create')}
              className={`px-4 py-3 text-sm font-medium rounded-t-lg transition-colors ${
                activeTab === 'create'
                  ? 'bg-blue-50 text-blue-700 border-b-2 border-blue-500'
                  : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'
              }`}
            >
              üöÄ –°–æ–∑–¥–∞—Ç—å Safe
            </button>
            
            {onConnect && (
              <button
                onClick={() => setActiveTab('connect')}
                className={`px-4 py-3 text-sm font-medium rounded-t-lg transition-colors ${
                  activeTab === 'connect'
                    ? 'bg-blue-50 text-blue-700 border-b-2 border-blue-500'
                    : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'
                }`}
              >
                üîå –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Safe
              </button>
            )}
          </div>
        </div>
      </div>

      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–∞–±–æ–≤ */}
      <div className="p-0">
        {activeTab === 'create' && (
          <SafeCreationForm
            onCreate={onCreate}
            onPredict={onPredict}
            loading={loading}
            predicting={predicting}
            predictedAddress={predictedAddress}
            userAddress={userAddress}
            className="border-0 shadow-none"
          />
        )}
        
        {activeTab === 'connect' && onConnect && (
          <SafeConnectionForm
            onConnect={onConnect}
            loading={loading}
            className="border-0 shadow-none"
          />
        )}
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="border-t border-gray-200 px-6 py-4">
        <div className={`grid grid-cols-1 ${onConnect ? 'md:grid-cols-2' : ''} gap-4`}>
          <div className="p-3 bg-blue-50 rounded-lg">
            <h3 className="font-medium text-blue-900 mb-2">üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Safe</h3>
            <ul className="text-sm text-blue-800 space-y-1">
              <li>‚Ä¢ –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏</li>
              <li>‚Ä¢ –í—ã–±–æ—Ä –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∏ –ø–æ—Ä–æ–≥–∞ –ø–æ–¥–ø–∏—Å–µ–π</li>
              <li>‚Ä¢ –ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞ –≥–∞–∑–∞ –∑–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ</li>
              <li>‚Ä¢ –ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π –∞–¥—Ä–µ—Å –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è</li>
            </ul>
          </div>
          
          {onConnect && (
            <div className="p-3 bg-purple-50 rounded-lg">
              <h3 className="font-medium text-purple-900 mb-2">üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É</h3>
              <ul className="text-sm text-purple-800 space-y-1">
                <li>‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —É–∂–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–º—É Safe</li>
                <li>‚Ä¢ –¢—Ä–µ–±—É—é—Ç—Å—è —Ç–æ—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã Safe</li>
                <li>‚Ä¢ –ù–µ —Ç—Ä–µ–±—É–µ—Ç –æ–ø–ª–∞—Ç—ã –≥–∞–∑–∞</li>
                <li>‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤</li>
              </ul>
            </div>
          )}
        </div>
        
        <div className="mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg">
          <p className="text-yellow-800 text-sm">
            <strong>üí° –°–æ–≤–µ—Ç:</strong> {onConnect ? 
              '–ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å Safe, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ". –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –Ω–æ–≤—ã–π –º—É–ª—å—Ç–∏—Å–∏–≥ –∫–æ—à–µ–ª–µ–∫, –≤—ã–±–µ—Ä–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å Safe".' :
              '–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Safe –º—É–ª—å—Ç–∏—Å–∏–≥ –∫–æ—à–µ–ª–µ–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–¥–ø–∏—Å—è–º–∏.'
            }
          </p>
        </div>
      </div>
    </div>
  )
}

export default SafeManagement
