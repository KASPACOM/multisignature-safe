import React, { useState, useEffect } from 'react'
import { SafeConnectionForm as SafeConnectionFormData, createSafeConnectionForm } from '../lib/onchain'

interface SafeConnectionFormProps {
  onConnect: (formData: SafeConnectionFormData) => void
  onCancel?: () => void
  loading?: boolean
  title?: string
  className?: string
  prefilledData?: {
    address: string
    owners: string[]
    threshold: number
  } | null
}

const SafeConnectionForm: React.FC<SafeConnectionFormProps> = ({
  onConnect,
  onCancel,
  loading = false,
  title = "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Safe",
  className = "",
  prefilledData
}) => {
  const [formData, setFormData] = useState<SafeConnectionFormData>({
    safeAddress: '',
    owners: [''],
    threshold: 1,
    safeVersion: '1.4.1',
    fallbackHandler: ''
  })

  const [errors, setErrors] = useState<{ [key: string]: string }>({})

  // –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  useEffect(() => {
    if (prefilledData) {
      console.log('üîÑ –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Safe:', prefilledData)
      setFormData({
        safeAddress: prefilledData.address,
        owners: prefilledData.owners,
        threshold: prefilledData.threshold,
        safeVersion: '1.4.1',
        fallbackHandler: ''
      })
    }
  }, [prefilledData])

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
  const validateForm = (): boolean => {
    const newErrors: { [key: string]: string } = {}

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥—Ä–µ—Å–∞ Safe
    if (!formData.safeAddress.trim()) {
      newErrors.safeAddress = '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å Safe'
    } else if (!formData.safeAddress.match(/^0x[a-fA-F0-9]{40}$/)) {
      newErrors.safeAddress = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∞–¥—Ä–µ—Å–∞ Ethereum'
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤
    const validOwners = formData.owners.filter(owner => owner.trim())
    if (validOwners.length === 0) {
      newErrors.owners = '–î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞'
    } else {
      const invalidOwners = validOwners.filter(owner => !owner.match(/^0x[a-fA-F0-9]{40}$/))
      if (invalidOwners.length > 0) {
        newErrors.owners = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∞–¥—Ä–µ—Å–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞'
      }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ threshold
    if (formData.threshold < 1) {
      newErrors.threshold = '–ü–æ—Ä–æ–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 0'
    } else if (formData.threshold > validOwners.length) {
      newErrors.threshold = '–ü–æ—Ä–æ–≥ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤'
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ fallbackHandler (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω)
    if (formData.fallbackHandler && formData.fallbackHandler.trim() && 
        !formData.fallbackHandler.match(/^0x[a-fA-F0-9]{40}$/)) {
      newErrors.fallbackHandler = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∞–¥—Ä–µ—Å–∞ fallback handler'
    }

    setErrors(newErrors)
    return Object.keys(newErrors).length === 0
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    
    if (!validateForm()) {
      return
    }

    // –û—á–∏—â–∞–µ–º –ø—É—Å—Ç—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü—ã –∏ —Å–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Ñ–æ—Ä–º—É
    const finalFormData = createSafeConnectionForm(
      formData.safeAddress.trim(),
      formData.owners.filter(owner => owner.trim()),
      formData.threshold,
      {
        safeVersion: formData.safeVersion || '1.4.1',
        fallbackHandler: formData.fallbackHandler?.trim() || undefined
      }
    )

    onConnect(finalFormData)
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã
  const updateField = (field: keyof SafeConnectionFormData, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }))
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—è
    if (errors[field]) {
      setErrors(prev => ({ ...prev, [field]: '' }))
    }
  }

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞
  const addOwner = () => {
    setFormData(prev => ({
      ...prev,
      owners: [...prev.owners, '']
    }))
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞
  const removeOwner = (index: number) => {
    setFormData(prev => ({
      ...prev,
      owners: prev.owners.filter((_, i) => i !== index)
    }))
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞
  const updateOwner = (index: number, value: string) => {
    setFormData(prev => ({
      ...prev,
      owners: prev.owners.map((owner, i) => i === index ? value : owner)
    }))
  }

  return (
    <div className={`p-6 bg-white rounded-lg shadow ${className}`}>
      <div className="mb-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-2">
          üîå {title}
        </h2>
        <p className="text-gray-600 text-sm">
          –£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã Safe –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ä–µ–∞–ª—å–Ω–æ–º—É Safe.
        </p>
      </div>

      <form onSubmit={handleSubmit} className="space-y-6">
        {/* –ê–¥—Ä–µ—Å Safe */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –ê–¥—Ä–µ—Å Safe *
          </label>
          <input
            type="text"
            value={formData.safeAddress}
            onChange={(e) => updateField('safeAddress', e.target.value)}
            placeholder="0x1234567890123456789012345678901234567890"
            className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${
              errors.safeAddress ? 'border-red-300' : 'border-gray-300'
            }`}
          />
          {errors.safeAddress && (
            <p className="mt-1 text-sm text-red-600">{errors.safeAddress}</p>
          )}
        </div>

        {/* –í–ª–∞–¥–µ–ª—å—Ü—ã */}
        <div>
          <div className="flex items-center justify-between mb-3">
            <label className="block text-sm font-medium text-gray-700">
              –í–ª–∞–¥–µ–ª—å—Ü—ã Safe *
            </label>
            <button
              type="button"
              onClick={addOwner}
              className="text-sm bg-blue-100 text-blue-700 px-3 py-1 rounded-lg hover:bg-blue-200 transition-colors"
            >
              + –î–æ–±–∞–≤–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞
            </button>
          </div>
          
          <div className="space-y-2">
            {formData.owners.map((owner, index) => (
              <div key={index} className="flex gap-2">
                <input
                  type="text"
                  value={owner}
                  onChange={(e) => updateOwner(index, e.target.value)}
                  placeholder={`–ê–¥—Ä–µ—Å –≤–ª–∞–¥–µ–ª—å—Ü–∞ ${index + 1}`}
                  className={`flex-1 p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${
                    errors.owners ? 'border-red-300' : 'border-gray-300'
                  }`}
                />
                {formData.owners.length > 1 && (
                  <button
                    type="button"
                    onClick={() => removeOwner(index)}
                    className="px-3 py-3 bg-red-100 text-red-700 rounded-lg hover:bg-red-200 transition-colors"
                    title="–£–¥–∞–ª–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞"
                  >
                    √ó
                  </button>
                )}
              </div>
            ))}
          </div>
          {errors.owners && (
            <p className="mt-1 text-sm text-red-600">{errors.owners}</p>
          )}
        </div>

        {/* –ü–æ—Ä–æ–≥ –ø–æ–¥–ø–∏—Å–µ–π */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –ü–æ—Ä–æ–≥ –ø–æ–¥–ø–∏—Å–µ–π *
          </label>
          <input
            type="number"
            min="1"
            max={formData.owners.filter(o => o.trim()).length || 1}
            value={formData.threshold}
            onChange={(e) => updateField('threshold', e.target.value)}
            className={`w-32 p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${
              errors.threshold ? 'border-red-300' : 'border-gray-300'
            }`}
          />
          {errors.threshold && (
            <p className="mt-1 text-sm text-red-600">{errors.threshold}</p>
          )}
          <p className="mt-1 text-sm text-gray-500">
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–µ–π, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
          </p>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã */}
        <div className="border-t pt-6">
          <h3 className="text-lg font-medium text-gray-900 mb-4">
            –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
          </h3>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {/* –í–µ—Ä—Å–∏—è Safe */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –í–µ—Ä—Å–∏—è Safe
              </label>
              <select
                value={formData.safeVersion}
                onChange={(e) => updateField('safeVersion', e.target.value)}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="1.4.1">1.4.1 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)</option>
                <option value="1.3.0">1.3.0</option>
                <option value="1.2.0">1.2.0</option>
                <option value="1.1.1">1.1.1</option>
              </select>
            </div>

            {/* Fallback Handler */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Fallback Handler
              </label>
              <input
                type="text"
                value={formData.fallbackHandler || ''}
                onChange={(e) => updateField('fallbackHandler', e.target.value)}
                placeholder="0x... (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${
                  errors.fallbackHandler ? 'border-red-300' : 'border-gray-300'
                }`}
              />
              {errors.fallbackHandler && (
                <p className="mt-1 text-sm text-red-600">{errors.fallbackHandler}</p>
              )}
              <p className="mt-1 text-sm text-gray-500">
                –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π
              </p>
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className="flex gap-4 pt-6 border-t">
          <button
            type="submit"
            disabled={loading}
            className="flex-1 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed font-medium"
          >
            {loading ? (
              <div className="flex items-center justify-center gap-2">
                <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...
              </div>
            ) : (
              'üîå –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Safe'
            )}
          </button>
          
          {onCancel && (
            <button
              type="button"
              onClick={onCancel}
              disabled={loading}
              className="px-6 py-3 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 disabled:opacity-50"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
          )}
        </div>
      </form>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
        <h4 className="font-medium text-blue-900 mb-2">üí° –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
        <ul className="text-sm text-blue-800 space-y-1">
          <li>‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∞–¥—Ä–µ—Å Safe –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω</li>
          <li>‚Ä¢ –í–ª–∞–¥–µ–ª—å—Ü—ã –∏ –ø–æ—Ä–æ–≥ –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω–æ–º—É Safe</li>
          <li>‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ—à–∏–±–∫–∞–º –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ</li>
          <li>‚Ä¢ –ü–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</li>
        </ul>
      </div>
    </div>
  )
}

export default SafeConnectionForm
