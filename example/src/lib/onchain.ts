import { ethers } from 'ethers'
import Safe from '@safe-global/protocol-kit'
import {
  SafeTransaction,
  MetaTransactionData,
  SafeTransactionDataPartial
} from '@safe-global/types-kit'
import {
  SafeAccountConfig,
  PredictedSafeProps,
  SafeConfig,
  ConnectSafeConfig
} from '@safe-global/protocol-kit'

import {
  getNetworkConfig,
  createContractNetworksConfig
} from './safe-common'
import { UniversalOperationResult } from './offchain'

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Safe (deprecated - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ SafeCreationForm)
export interface CreateSafeParams {
  owners: string[]
  threshold: number
  signer: ethers.Signer
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
export interface TransactionParams {
  to: string
  value: string
  data: string
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ñ–æ—Ä–º—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Safe (frontend)
export interface SafeConnectionForm {
  safeAddress: string
  owners: string[]
  threshold: number
  safeVersion?: string // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '1.4.1'
  fallbackHandler?: string // –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∏–∑ —Å–µ—Ç–∏
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ Safe
export interface SafeCreationForm {
  owners: string[]
  threshold: number
  safeVersion?: string // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '1.4.1'
  fallbackHandler?: string // –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∏–∑ —Å–µ—Ç–∏
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
export interface UniversalFunctionCall {
  contractAddress: string
  functionSignature: string // –Ω–∞–ø—Ä–∏–º–µ—Ä: "transfer(address,uint256)" 
  functionParams: any[] // –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
  value?: string // ETH value, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "0"
}

// –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Safe –æ–Ω—á–µ–π–Ω –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
export class SafeOnChain {
  private signer: ethers.Signer
  private networkConfig = getNetworkConfig()
  private contractNetworks = createContractNetworksConfig(this.networkConfig)
  private safeSdk: Safe | null = null
  private currentSafeAddress: string | null = null
  
  // üîÑ –î–≤–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã Safe SDK:
  // 1Ô∏è‚É£ PREDICT MODE: —Å–∏–º—É–ª–∏—Ä—É–µ–º Safe (–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è) - –∏—Å–ø–æ–ª—å–∑—É–µ–º predictedSafe
  // 2Ô∏è‚É£ ADDRESS MODE: –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–º—É Safe - –∏—Å–ø–æ–ª—å–∑—É–µ–º safeAddress

  constructor(signer: ethers.Signer) {
    this.signer = signer
  }

  // üîÑ –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è signer (–ø—Ä–∏ —Å–º–µ–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ MetaMask)
  async updateSigner(newSigner: ethers.Signer) {
    console.log('üîÑ SafeOnChain: –û–±–Ω–æ–≤–ª—è–µ–º signer –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
    
    try {
      const oldAddress = await this.signer?.getAddress()
      const newAddress = await newSigner?.getAddress()
      console.log('üìç –°—Ç–∞—Ä—ã–π –∞–¥—Ä–µ—Å:', oldAddress || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω') 
      console.log('üìç –ù–æ–≤—ã–π –∞–¥—Ä–µ—Å:', newAddress || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω')
    } catch (error) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å–∞ signer:', error)
    }
    
    this.signer = newSigner
    
    // –°–±—Ä–æ—Å —Ç–µ–∫—É—â–∏—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π - –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —Å –Ω–æ–≤—ã–º signer
    this.safeSdk = null
    this.currentSafeAddress = null
    
    console.log('‚úÖ SafeOnChain: Signer –æ–±–Ω–æ–≤–ª–µ–Ω! –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Safe.')
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π Safe SDK –∏–ª–∏ –±—Ä–æ—Å–∏—Ç—å –æ—à–∏–±–∫—É
  getSafeSdk(): Safe {
    if (!this.safeSdk) {
      throw new Error('Safe –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ Safe.')
    }
    return this.safeSdk
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∞–¥—Ä–µ—Å Safe
  getCurrentSafeAddress(): string | null {
    return this.currentSafeAddress
  }

  // –ü–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å —Ç–µ–∫—É—â–µ–≥–æ signer
  async getSignerAddress(): Promise<string> {
    return await this.signer.getAddress()
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ Safe
  isConnected(): boolean {
    const hasSafeSdk = this.safeSdk !== null
    const hasCurrentSafeAddress = this.currentSafeAddress !== null
    return hasSafeSdk && hasCurrentSafeAddress
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Safe —Å —Ñ–æ—Ä–º–æ–π
  async createSafeWithForm(form: SafeCreationForm): Promise<Safe> {
    const { owners, threshold } = form

    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ Safe —Å —Ñ–æ—Ä–º–æ–π:', { owners, threshold })
    
    const safeAccountConfig: SafeAccountConfig = {
      owners,
      threshold,
      fallbackHandler: form.fallbackHandler || this.networkConfig.contracts.compatibilityFallbackHandler
    }

    console.log('üìã SafeAccountConfig:', safeAccountConfig)
    console.log('üåê Contract networks:', this.contractNetworks)

    // –°–æ–∑–¥–∞–µ–º Safe —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
    const predictedSafe: PredictedSafeProps = {
      safeAccountConfig,
      safeDeploymentConfig: {
        safeVersion: '1.4.1'
      }
    }

    const safeConfig: SafeConfig = {
      provider: this.networkConfig.rpcUrl, // ‚Üê RPC –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏
      signer: await this.signer.getAddress(), // ‚Üê –ê–¥—Ä–µ—Å signer –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
      predictedSafe,
      contractNetworks: this.contractNetworks
    }

    try {
      console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Safe SDK...')
      const safeSdk = await Safe.init(safeConfig)

      console.log('üîÆ –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å...')
      const predictedAddress = await safeSdk.getAddress()
      console.log('üìç Predicted Safe address:', predictedAddress)

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ Safe –ø–æ —ç—Ç–æ–º—É –∞–¥—Ä–µ—Å—É
      const provider = this.signer.provider!
      const existingCode = await provider.getCode(predictedAddress)
      
      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞:')
      console.log('  üìç –ê–¥—Ä–µ—Å:', predictedAddress)
      console.log('  üìã –ö–æ–¥:', existingCode)
      console.log('  üìè –î–ª–∏–Ω–∞:', existingCode?.length || 0)
      console.log('  ‚úÖ –£—Å–ª–æ–≤–∏–µ existingCode:', !!existingCode)
      console.log('  ‚úÖ –£—Å–ª–æ–≤–∏–µ !== "0x":', existingCode !== '0x')
      console.log('  ‚úÖ –£—Å–ª–æ–≤–∏–µ length > 2:', (existingCode?.length || 0) > 2)
      console.log('  üéØ –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', !!(existingCode && existingCode !== '0x' && existingCode.length > 2))

      if (existingCode && existingCode !== '0x' && existingCode.length > 2) {
        console.log('üîç –ü–æ –∞–¥—Ä–µ—Å—É –µ—Å—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º —ç—Ç–æ –ª–∏ Safe...')
        console.log('üìç –ê–¥—Ä–µ—Å:', predictedAddress)
        
        try {
          // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ Safe
          const existingSafeConfig: SafeConfig = {
            provider: this.networkConfig.rpcUrl, // ‚Üê RPC –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏
            signer: await this.signer.getAddress(), // ‚Üê –ê–¥—Ä–µ—Å signer –¥–ª—è approved hash –æ–ø–µ—Ä–∞—Ü–∏–π
            safeAddress: predictedAddress, // –ò—Å–ø–æ–ª—å–∑—É–µ–º safeAddress –¥–ª—è deployed Safe
            contractNetworks: this.contractNetworks
          }
          
          console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ Safe...')
          const existingSafeSdk = await Safe.init(existingSafeConfig)
          
          // –ï—Å–ª–∏ –¥–æ—à–ª–∏ —Å—é–¥–∞ - —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ Safe –∫–æ–Ω—Ç—Ä–∞–∫—Ç
          console.log('‚úÖ –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ Safe! –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –Ω–µ–º—É...')
          console.log('üîÑ –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï: PREDICT MODE ‚Üí ADDRESS MODE')
          console.log('üë• –í–ª–∞–¥–µ–ª—å—Ü—ã:', form.owners)
          console.log('üî¢ –ü–æ—Ä–æ–≥:', form.threshold)
          
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–∫ —Ç–µ–∫—É—â–∏–π Safe (—Ç–µ–ø–µ—Ä—å –≤ ADDRESS MODE)
          this.safeSdk = existingSafeSdk
          this.currentSafeAddress = predictedAddress
          
          console.log('üîó –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É Safe –≤ ADDRESS MODE:', predictedAddress)
          return existingSafeSdk
          
        } catch (error) {
          console.log('‚ö†Ô∏è –ö–æ–Ω—Ç—Ä–∞–∫—Ç –ø–æ –∞–¥—Ä–µ—Å—É —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ —ç—Ç–æ –Ω–µ Safe:', error)
          console.log('üöÄ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Safe...')
          // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ - —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π Safe
        }
      }

      console.log('‚úÖ –ê–¥—Ä–µ—Å —Å–≤–æ–±–æ–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º Safe...')

      // –î–µ–ø–ª–æ–∏–º Safe (–æ—Å—Ç–∞–µ–º—Å—è –≤ PREDICT MODE)
      console.log('üõ†Ô∏è Deploying Safe –≤ PREDICT MODE...')
      const deploymentTransaction = await safeSdk.createSafeDeploymentTransaction()
      const txResponse = await this.signer.sendTransaction({
        to: deploymentTransaction.to,
        value: deploymentTransaction.value,
        data: deploymentTransaction.data
      })

      console.log('üìù Safe deployment transaction:', txResponse.hash)

      // –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
      const receipt = await txResponse.wait?.()
      console.log('‚úÖ Safe deployed in block:', receipt?.blockNumber)

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π Safe (–ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ ADDRESS MODE –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è)
      const deployedSafeAddress = await safeSdk.getAddress()
      this.safeSdk = safeSdk // –¢–µ–ø–µ—Ä—å —ç—Ç–æ ADDRESS MODE instance!
      this.currentSafeAddress = deployedSafeAddress
      
      console.log('üéâ Safe —Å–æ–∑–¥–∞–Ω –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ ADDRESS MODE:', deployedSafeAddress)

      // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
      const [version, owners, threshold, nonce, balance] = await Promise.all([
        safeSdk.getContractVersion(),
        safeSdk.getOwners(),
        safeSdk.getThreshold(),
        safeSdk.getNonce(),
        safeSdk.getBalance()
      ])

      console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Safe:')
      console.log('  üîç –í–µ—Ä—Å–∏—è:', version)
      console.log('  üë• –í–ª–∞–¥–µ–ª—å—Ü—ã:', owners)
      console.log('  üî¢ –ü–æ—Ä–æ–≥:', threshold)
      console.log('  üìù Nonce:', nonce)
      console.log('  üí∞ –ë–∞–ª–∞–Ω—Å:', balance)

      return safeSdk

    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Safe:', error.message)
      throw error
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Safe (—Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
  async createSafe(params: CreateSafeParams): Promise<Safe> {
    const form: SafeCreationForm = {
      owners: params.owners,
      threshold: params.threshold
    }
    return this.createSafeWithForm(form)
  }

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É Safe —Å —Ñ–æ—Ä–º–æ–π
  async connectToSafeWithForm(form: SafeConnectionForm): Promise<Safe> {
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Safe —Å —Ñ–æ—Ä–º–æ–π:')
    console.log('  üìç –ê–¥—Ä–µ—Å:', form.safeAddress)
    console.log('  üë• –í–ª–∞–¥–µ–ª—å—Ü—ã:', form.owners)
    console.log('  üî¢ –ü–æ—Ä–æ–≥:', form.threshold)
    console.log('  üîñ –í–µ—Ä—Å–∏—è:', form.safeVersion)
    
    try {
      // –î–õ–Ø –°–£–©–ï–°–¢–í–£–Æ–©–ï–ì–û SAFE –∏—Å–ø–æ–ª—å–∑—É–µ–º safeAddress, –ù–ï predictedSafe!
      const safeConfig: SafeConfig = {
        provider: this.networkConfig.rpcUrl, // ‚Üê RPC –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏
        signer: await this.signer.getAddress(), // ‚Üê –ö–†–ò–¢–ò–ß–ù–û! –ê–¥—Ä–µ—Å signer –¥–ª—è approved hash –æ–ø–µ—Ä–∞—Ü–∏–π
        safeAddress: form.safeAddress, // ‚Üê –ü–†–ê–í–ò–õ–¨–ù–û! –£–∫–∞–∑—ã–≤–∞–µ–º –∞–¥—Ä–µ—Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ Safe
        contractNetworks: this.contractNetworks,
        isL1SafeSingleton: false
      }

      console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Safe SDK –¥–ª—è –°–£–©–ï–°–¢–í–£–Æ–©–ï–ì–û Safe...')
      const safeSdk = await Safe.init(safeConfig)

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π Safe
      this.safeSdk = safeSdk
      this.currentSafeAddress = form.safeAddress

      console.log('‚úÖ Safe —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω:', form.safeAddress)

      // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–º Safe
      const [actualOwners, actualThreshold, nonce, balance] = await Promise.all([
        safeSdk.getOwners(),
        safeSdk.getThreshold(),
        safeSdk.getNonce(),
        safeSdk.getBalance()
      ])

      console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–º Safe:')
      console.log('  üë• –í–ª–∞–¥–µ–ª—å—Ü—ã:', actualOwners)
      console.log('  üî¢ –ü–æ—Ä–æ–≥:', actualThreshold)
      console.log('  üìù Nonce:', nonce)
      console.log('  üí∞ –ë–∞–ª–∞–Ω—Å:', ethers.formatEther(balance), 'ETH')

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
      if (actualOwners.length !== form.owners.length || actualThreshold !== form.threshold) {
        console.warn('‚ö†Ô∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ä–µ–∞–ª—å–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º Safe!')
        console.warn('  –§–æ—Ä–º–∞ –≤–ª–∞–¥–µ–ª—å—Ü—ã/–ø–æ—Ä–æ–≥:', form.owners.length, '/', form.threshold)
        console.warn('  –†–µ–∞–ª—å–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü—ã/–ø–æ—Ä–æ–≥:', actualOwners.length, '/', actualThreshold)
      }

      return safeSdk

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Safe:', error)
      this.safeSdk = null
      this.currentSafeAddress = null
      throw error
    }
  }

  // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ Safe
  disconnect(): void {
    console.log('üîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç Safe:', this.currentSafeAddress)
    this.safeSdk = null
    this.currentSafeAddress = null
  }


  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ Safe –ø–æ —Ñ–æ—Ä–º–µ —Å–æ–∑–¥–∞–Ω–∏—è (–±–µ–∑ –¥–µ–ø–ª–æ—è)
  async getSafeAddressByForm(form: SafeCreationForm): Promise<string> {
    console.log('üîÆ –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å Safe –ø–æ —Ñ–æ—Ä–º–µ...')
    console.log('üë• –í–ª–∞–¥–µ–ª—å—Ü—ã:', form.owners)
    console.log('üî¢ –ü–æ—Ä–æ–≥:', form.threshold)
    
    try {
      const predictedSafe: PredictedSafeProps = {
        safeAccountConfig: {
          owners: form.owners,
          threshold: form.threshold,
          fallbackHandler: form.fallbackHandler || this.networkConfig.contracts.compatibilityFallbackHandler
        },
        safeDeploymentConfig: {
          safeVersion: '1.4.1'
        }
      }

      const safeConfig: SafeConfig = {
        provider: this.networkConfig.rpcUrl, // ‚Üê RPC –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏
        signer: await this.signer.getAddress(), // ‚Üê –ê–¥—Ä–µ—Å signer –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞
        predictedSafe,
        isL1SafeSingleton: false,
        contractNetworks: this.contractNetworks,
      }

      const safeSdk = await Safe.init(safeConfig)
      const predictedAddress = await safeSdk.getAddress()
      
      console.log('üìç –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å Safe:', predictedAddress)
      return predictedAddress

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ Safe:', error)
      throw error
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è Safe –ø–æ –∞–¥—Ä–µ—Å—É
  async isSafeDeployed(safeAddress: string): Promise<boolean> {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ provider
      const provider = this.signer.provider!
      const code = await provider.getCode(safeAddress)

      console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Safe –ø–æ –∞–¥—Ä–µ—Å—É ${safeAddress}:`, {
        codeLength: code.length,
        hasCode: code && code !== '0x' && code.length > 2
      })

      if (!code || code === '0x' || code.length <= 2) {
        console.log('‚ùå Safe –Ω–µ –Ω–∞–π–¥–µ–Ω - –Ω–µ—Ç –∫–æ–¥–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞')
        return false
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–æ–¥ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
      console.log('‚úÖ Safe –Ω–∞–π–¥–µ–Ω - –µ—Å—Ç—å –∫–æ–¥ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞')
      return true
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Safe –ø–æ –∞–¥—Ä–µ—Å—É:', safeAddress, error)
      return false
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º Safe
  async getCurrentSafeInfo() {
    const safeSdk = this.getSafeSdk()
    const safeAddress = this.getCurrentSafeAddress()

    if (!safeAddress) {
      throw new Error('–ê–¥—Ä–µ—Å Safe –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')
    }

    const isDeployed = await safeSdk.isSafeDeployed()

    console.log('üîç Safe –¥–µ–ø–ª–æ–µ–Ω:', isDeployed)
    console.log('üîç Safe safeSdk.getOwners:', await safeSdk.getOwners())
    console.log('üîç Safe safeSdk.getThreshold:', await safeSdk.getThreshold())
    console.log('üîç Safe safeSdk.getBalance:', await safeSdk.getBalance())
    console.log('üîç Safe safeSdk.getNonce:', await safeSdk.getNonce())
    console.log('üîç Safe safeSdk.getContractVersion:', await safeSdk.getContractVersion())

    const [owners, threshold, balance, nonce, version] = await Promise.all([
      safeSdk.getOwners(),
      safeSdk.getThreshold(),
      safeSdk.getBalance(),
      safeSdk.getNonce(),
      safeSdk.getContractVersion()
    ])

    console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Safe:')
    console.log('  üë• –í–ª–∞–¥–µ–ª—å—Ü—ã:', owners)
    console.log('  üî¢ –ü–æ—Ä–æ–≥:', threshold)
    console.log('  üí∞ –ë–∞–ª–∞–Ω—Å:', ethers.formatEther(balance), 'ETH')
    console.log('  üìù Nonce:', nonce)
    console.log('  üîñ –í–µ—Ä—Å–∏—è:', version)

    return {
      address: safeAddress,
      owners,
      threshold,
      balance: ethers.formatEther(balance),
      nonce,
      version,
      isDeployed: await safeSdk.isSafeDeployed()
    }
  }

  // –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞  
  encodeFunctionCall(functionCall: UniversalFunctionCall): string {
    try {
      console.log('üîß –ö–æ–¥–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏:', functionCall.functionSignature)
      console.log('üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:', functionCall.functionParams)

      // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏
      const functionAbi = [`function ${functionCall.functionSignature}`]
      const contractInterface = new ethers.Interface(functionAbi)

      // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ signature
      const functionName = functionCall.functionSignature.split('(')[0]

      // –ö–æ–¥–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
      const encodedData = contractInterface.encodeFunctionData(functionName, functionCall.functionParams)

      console.log('‚úÖ –ó–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', encodedData)
      return encodedData

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏:', error)
      throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é ${functionCall.functionSignature}: ${error}`)
    }
  }

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ö–µ—à–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ Safe –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ Safe
  async createUniversalTransactionHash(
    functionCall: UniversalFunctionCall
  ): Promise<UniversalOperationResult> {
    console.log('üèóÔ∏è –°–æ–∑–¥–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ Safe...')
    
    const safeSdk = this.getSafeSdk()
    const safeAddress = this.getCurrentSafeAddress()

    if (!safeAddress) {
      throw new Error('Safe –∞–¥—Ä–µ—Å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')
    }
    
    try {
      // 1. –ö–æ–¥–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
      const encodedData = this.encodeFunctionCall(functionCall)

      // 2. –°–æ–∑–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      const transactionParams: TransactionParams = {
        to: functionCall.contractAddress,
        value: functionCall.value || '0',
        data: encodedData
      }

      console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:')
      console.log(`   - Safe: ${safeAddress}`)
      console.log(`   - To: ${transactionParams.to}`)
      console.log(`   - Value: ${transactionParams.value} ETH`)
      console.log(`   - Data: ${transactionParams.data}`)

      // 3. –°–æ–∑–¥–∞–µ–º Safe —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é (nonce –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏)
      const safeTransaction = await this.createSafeTransaction(transactionParams)
      
      // 4. –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π nonce –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      const nonce = safeTransaction.data.nonce
      console.log(`   - Nonce (–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏): ${nonce}`)

      // 5. –ü–æ–ª—É—á–∞–µ–º —Ö–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      const transactionHash = await this.getTransactionHash(safeTransaction)

      console.log('üéØ –•–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏:', transactionHash)

      return {
        transactionHash,
        safeTransaction,
        encodedData,
        transactionDetails: {
          to: transactionParams.to,
          value: transactionParams.value,
          data: transactionParams.data,
          nonce
        }
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', error)
      throw error
    }
  }


  // –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ Safe –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ Safe
  async createSafeTransaction(
    transactionParams: TransactionParams
  ): Promise<SafeTransaction> {
    const safeSdk = this.getSafeSdk()

    const metaTransactionData: MetaTransactionData = {
      to: transactionParams.to,
      value: ethers.parseEther(transactionParams.value).toString(),
      data: transactionParams.data
    }

    const safeTransaction = await safeSdk.createTransaction({
      transactions: [metaTransactionData]
    })
    return safeTransaction
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –º—É–ª—å—Ç–∏—Å–µ–Ω–¥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ Safe
  async createMultiSendTransaction(
    transactions: TransactionParams[]
  ): Promise<SafeTransaction> {
    const safeSdk = this.getSafeSdk()

    const metaTransactions: MetaTransactionData[] = transactions.map(tx => ({
      to: tx.to,
      value: ethers.parseEther(tx.value).toString(),
      data: tx.data
    }))

    const safeTransaction = await safeSdk.createTransaction({
      transactions: metaTransactions
    })

    return safeTransaction
  }

  // –ü–æ–¥–ø–∏—Å—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ Safe
  async signTransaction(
    safeTransaction: SafeTransaction
  ): Promise<SafeTransaction> {
    const safeSdk = this.getSafeSdk()
    const signedTransaction = await safeSdk.signTransaction(safeTransaction)
    return signedTransaction
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ö–µ—à–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ Safe
  async getTransactionHash(
    safeTransaction: SafeTransaction
  ): Promise<string> {
    const safeSdk = this.getSafeSdk()
    return await safeSdk.getTransactionHash(safeTransaction)
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏ –∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
  getSignatureFromTransaction(
    safeTransaction: SafeTransaction,
    signerAddress: string
  ): string | undefined {
    const signatures = safeTransaction.signatures
    if (!signatures) return undefined

    const signature = signatures.get(signerAddress.toLowerCase())
    return signature ? ((typeof signature === 'object' && signature && 'data' in signature) ? String(signature.data) : String(signature)) : undefined
  }

  // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ Safe
  async executeTransaction(
    safeTransaction: SafeTransaction
  ): Promise<any> {
    const safeSdk = this.getSafeSdk()
    const safeAddress = this.getCurrentSafeAddress()

    console.log('üöÄ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ Safe:', safeAddress)
    const executeTxResponse = await safeSdk.executeTransaction(safeTransaction)

    console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, —Ö–µ—à:', executeTxResponse.hash)

    return {
      hash: executeTxResponse.hash,
      response: executeTxResponse
    }
  }

  // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –ø–æ–¥–ø–∏—Å–µ–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ Safe
  async executeTransactionWithSignatures(
    safeTransaction: SafeTransaction,
    signatures: Array<{
      signer: string
      signature: string
    }>
  ): Promise<any> {
    console.log('üöÄ –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∏ –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é...')
    
    const safeSdk = this.getSafeSdk()
    const safeAddress = this.getCurrentSafeAddress()

    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∞–¥–µ–ª—å—Ü–∞—Ö Safe
    const actualOwners = await safeSdk.getOwners()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–æ–¥–ø–∏—Å–∞–Ω—Ç—ã —è–≤–ª—è—é—Ç—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏
    for (const sig of signatures) {
      const isOwner = actualOwners.map(o => o.toLowerCase()).includes(sig.signer.toLowerCase())
      if (!isOwner) {
        throw new Error(`–ê–¥—Ä–µ—Å ${sig.signer} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º Safe! –í–ª–∞–¥–µ–ª—å—Ü—ã: ${actualOwners.join(', ')}`)
      }
    }

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∏ –ø–æ –∞–¥—Ä–µ—Å–∞–º (—Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ Safe GS026)
    const sortedSignatures = [...signatures].sort((a, b) => {
      return a.signer.toLowerCase().localeCompare(b.signer.toLowerCase())
    })

    console.log('üîÑ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ–¥–ø–∏—Å–µ–π:', sortedSignatures.map(s => s.signer))

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –ø–æ–¥–ø–∏—Å—å –∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    for (const sig of sortedSignatures) {
      console.log(`üìù –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –æ—Ç ${sig.signer}:`, sig.signature.slice(0, 10) + '...')
      
      // –°–æ–∑–¥–∞–µ–º SafeSignature –æ–±—ä–µ–∫—Ç
      const safeSignature = {
        signer: sig.signer,
        data: sig.signature,
        isContractSignature: false,
        staticPart: (dynamicOffset?: string) => sig.signature,
        dynamicPart: () => ''
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      safeTransaction.addSignature(safeSignature)
    }

    console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${signatures.length} –ø–æ–¥–ø–∏—Å–µ–π`)
    console.log('üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–µ–π:', safeTransaction.signatures.size)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–µ–π
    const threshold = await safeSdk.getThreshold()
    console.log(`üéØ –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–µ–π: ${threshold}, –∏–º–µ–µ—Ç—Å—è: ${safeTransaction.signatures.size}`)

    if (safeTransaction.signatures.size < threshold) {
      throw new Error(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–¥–ø–∏—Å–µ–π! –¢—Ä–µ–±—É–µ—Ç—Å—è: ${threshold}, –ø–æ–ª—É—á–µ–Ω–æ: ${safeTransaction.signatures.size}`)
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    console.log('üöÄ –í—ã–ø–æ–ª–Ω—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é...')
    const executeTxResponse = await safeSdk.executeTransaction(safeTransaction)

    console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –•–µ—à:', executeTxResponse.hash)

    return {
      hash: executeTxResponse.hash,
      response: executeTxResponse,
      signaturesUsed: signatures.length,
      threshold: threshold
    }
  }

  // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —Å EIP-712 –ø–æ–¥–ø–∏—Å—è–º–∏ —á–µ—Ä–µ–∑ Safe SDK
  async createAndSignTransaction(transactions: Array<{to: string, data: string, value?: string}>): Promise<SafeTransaction> {
    const safeSdk = this.getSafeSdk()
    
    console.log('üìù –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —á–µ—Ä–µ–∑ Safe SDK...')
    
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç MetaTransactionData —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º value
    const metaTransactions = transactions.map(tx => ({
      to: tx.to,
      data: tx.data,
      value: tx.value || '0' // –ï—Å–ª–∏ value –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º '0'
    }))
    
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é - Safe SDK —Å–∞–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç
    const safeTransaction = await safeSdk.createTransaction({ transactions: metaTransactions })
    
    console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞, –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ EIP-712...')
    
    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ EIP-712 (signTypedData_v4)
    await safeSdk.signTransaction(safeTransaction)
    
    console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø–æ–¥–ø–∏—Å–∞–Ω–∞ EIP-712!')
    console.log('üìä –ü–æ–¥–ø–∏—Å–µ–π –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', safeTransaction.signatures.size)
    
    return safeTransaction
  }

  // –ü—Ä–æ—Å—Ç–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
  async executeSignedTransaction(safeTransaction: SafeTransaction): Promise<any> {
    const safeSdk = this.getSafeSdk()
    const threshold = await safeSdk.getThreshold()
    
    console.log(`üéØ –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–µ–π: ${threshold}, –µ—Å—Ç—å: ${safeTransaction.signatures.size}`)
    
    if (safeTransaction.signatures.size < threshold) {
      throw new Error(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–¥–ø–∏—Å–µ–π! –¢—Ä–µ–±—É–µ—Ç—Å—è: ${threshold}, –µ—Å—Ç—å: ${safeTransaction.signatures.size}`)
    }
    
    console.log('üöÄ –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é...')
    
    // Safe SDK —Å–∞–º —Ä–∞–∑–±–µ—Ä–µ—Ç—Å—è —Å –ø–æ–¥–ø–∏—Å—è–º–∏ (v = 27/28 –¥–ª—è EIP-712)
    const executeTxResponse = await safeSdk.executeTransaction(safeTransaction)
    
    console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞! –•—ç—à:', executeTxResponse.hash)
    
    return {
      hash: executeTxResponse.hash,
      response: executeTxResponse,
      signaturesUsed: safeTransaction.signatures.size,
      threshold: threshold
    }
  }

  // –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: —Å–æ–∑–¥–∞—Ç—å -> –ø–æ–¥–ø–∏—Å–∞—Ç—å -> –≤—ã–ø–æ–ª–Ω–∏—Ç—å (—Ç–æ–ª—å–∫–æ –¥–ª—è single-user)
  async createSignAndExecute(transactions: Array<{to: string, data: string, value?: string}>): Promise<any> {
    console.log('üîÑ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: —Å–æ–∑–¥–∞—Ç—å -> –ø–æ–¥–ø–∏—Å–∞—Ç—å -> –≤—ã–ø–æ–ª–Ω–∏—Ç—å')
    
    // 1. –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º
    const signedTransaction = await this.createAndSignTransaction(transactions)
    
    // 2. –í—ã–ø–æ–ª–Ω—è–µ–º
    return await this.executeSignedTransaction(signedTransaction)
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è —Ö—ç—à–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º
  async approveTransactionHash(safeTransaction: SafeTransaction): Promise<string> {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º "–ª–µ–Ω–∏–≤—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é" —Å safeAddress —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å RPC –ø—Ä–æ–≤–µ—Ä–æ–∫
    const currentAddress = this.getCurrentSafeAddress()
    if (!currentAddress) {
      throw new Error('Safe –∞–¥—Ä–µ—Å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')
    }
    
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π SafeConfig —Å safeAddress (–±–µ–∑ RPC –ø—Ä–æ–≤–µ—Ä–æ–∫)
    const lazyConfig: SafeConfig = {
      provider: this.networkConfig.rpcUrl, // ‚Üê RPC –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏
      signer: await this.signer.getAddress(), // ‚Üê –ö–†–ò–¢–ò–ß–ù–û! –ê–¥—Ä–µ—Å signer –¥–ª—è approved hash –æ–ø–µ—Ä–∞—Ü–∏–π
      safeAddress: currentAddress, // ‚Üê –õ–µ–Ω–∏–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
      contractNetworks: this.contractNetworks
    }
    
    const safeSdk = await Safe.init(lazyConfig)
    
    // –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Safe –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç
    const isDeployed = await safeSdk.isSafeDeployed()
    if (!isDeployed) {
      throw new Error(`Safe –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç! –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ Safe –ø–æ –∞–¥—Ä–µ—Å—É: ${currentAddress}`)
    }
    
    const txHash = await safeSdk.getTransactionHash(safeTransaction)
    
    console.log('üìù –û–¥–æ–±—Ä—è–µ–º —Ö—ç—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', txHash)
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ Safe SDK –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è
    const approveTxResponse = await safeSdk.approveTransactionHash(txHash)
    
    console.log('‚úÖ –•—ç—à –æ–¥–æ–±—Ä–µ–Ω! Tx:', approveTxResponse.hash)
    return txHash
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –æ–¥–æ–±—Ä–∏–ª–∏ —Ö—ç—à (–∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ Safe SDK)
  async checkApprovedOwners(transactionHash: string): Promise<string[]> {
    const safeSdk = this.getSafeSdk()
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ç–æ –æ–¥–æ–±—Ä–∏–ª —Ö—ç—à:', transactionHash)
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ Safe SDK
    const approvedOwners = await safeSdk.getOwnersWhoApprovedTx(transactionHash)
    
    console.log('üë• –í–ª–∞–¥–µ–ª—å—Ü—ã –æ–¥–æ–±—Ä–∏–≤—à–∏–µ —Ö—ç—à:', approvedOwners)
    return approvedOwners
  }

  // –ì–∏–±–∫–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å mixed –ø–æ–¥–ø–∏—Å—è–º–∏ (EIP-712 + approved hash)
  async executeWithMixedSignatures(safeTransaction: SafeTransaction): Promise<any> {
    const safeSdk = this.getSafeSdk()
    const threshold = await safeSdk.getThreshold()
    
    // –ü–æ–ª—É—á–∞–µ–º —Ö—ç—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º approved hash –æ–¥–æ–±—Ä–µ–Ω–∏—è
    const txHash = await safeSdk.getTransactionHash(safeTransaction)
    const approvedOwners = await this.checkApprovedOwners(txHash)
    
    // –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–µ–π
    const existingSignatures = safeTransaction.signatures.size
    const totalSignatures = existingSignatures + approvedOwners.length
    
    console.log(`üéØ –¢—Ä–µ–±—É–µ—Ç—Å—è: ${threshold}`)
    console.log(`üìù EIP-712 –ø–æ–¥–ø–∏—Å–µ–π: ${existingSignatures}`) 
    console.log(`‚úÖ Approved hash: ${approvedOwners.length}`)
    console.log(`üî¢ –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–µ–π: ${totalSignatures}`)
    
    if (totalSignatures < threshold) {
      throw new Error(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–¥–ø–∏—Å–µ–π! –¢—Ä–µ–±—É–µ—Ç—Å—è: ${threshold}, –µ—Å—Ç—å: ${totalSignatures} (EIP-712: ${existingSignatures}, approved: ${approvedOwners.length})`)
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º approved hash –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤
    if (approvedOwners.length > 0) {
      // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∞–¥—Ä–µ—Å–∞–º (—Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ Safe)
      const sortedOwners = approvedOwners.sort((a, b) => 
        a.toLowerCase().localeCompare(b.toLowerCase())
      )
      
      sortedOwners.forEach(owner => {
        // –§–æ—Ä–º–∞—Ç approved hash –ø–æ–¥–ø–∏—Å–∏: v=1, r=ownerAddress, s=0
        const approvedSignature = {
          signer: owner.toLowerCase(),
          data: `0x${owner.slice(2).padStart(64, '0')}${'0'.repeat(64)}01`,
          isContractSignature: false,
          staticPart: () => `0x${owner.slice(2).padStart(64, '0')}${'0'.repeat(64)}01`,
          dynamicPart: () => ''
        }
        
        safeTransaction.addSignature(approvedSignature)
      })
      
      console.log('‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã approved hash –ø–æ–¥–ø–∏—Å–∏')
    }
    
    console.log('üöÄ –í—ã–ø–æ–ª–Ω—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å mixed –ø–æ–¥–ø–∏—Å—è–º–∏...')
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —á–µ—Ä–µ–∑ Safe SDK
    const executeTxResponse = await safeSdk.executeTransaction(safeTransaction)
    
    console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞! –•—ç—à:', executeTxResponse.hash)
    return {
      hash: executeTxResponse.hash,
      response: executeTxResponse,
      eip712Signatures: existingSignatures,
      approvedHashSignatures: approvedOwners.length,
      totalSignatures: totalSignatures,
      threshold: threshold
    }
  }

  // =============================================================================
  // –í–´–°–û–ö–û–£–†–û–í–ù–ï–í–´–ô WORKFLOW (–∏–∑ SafeManager)
  // =============================================================================

  // –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (—Å–æ–∑–¥–∞–Ω–∏–µ + –ø–æ–¥–ø–∏—Å—å + approve hash)
  async proposeTransaction(params: TransactionParams): Promise<string> {
    console.log('üìù SafeOnChain: –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...')
    
    if (!this.isConnected()) {
      throw new Error('Safe –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω')
    }

    try {
      // 1. –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
      const safeTransaction = await this.createSafeTransaction(params)

      // 2. –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é 
      const signedTransaction = await this.signTransaction(safeTransaction)

      // 3. –ü–æ–ª—É—á–∞–µ–º —Ö–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      const safeTxHash = await this.getTransactionHash(signedTransaction)

      // 4. –û–¥–æ–±—Ä—è–µ–º —Ö–µ—à –≤ –±–ª–æ–∫—á–µ–π–Ω–µ (–≤–º–µ—Å—Ç–æ LocalStorage)
      await this.approveTransactionHash(signedTransaction)

      console.log('‚úÖ SafeOnChain: –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∞ –∏ –æ–¥–æ–±—Ä–µ–Ω–∞:', safeTxHash)
      return safeTxHash

    } catch (error) {
      console.error('‚ùå SafeOnChain: –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', error)
      throw error
    }
  }

  // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å pre-approved –ø–æ–¥–ø–∏—Å—è–º–∏ —á–µ—Ä–µ–∑ SafeOffChain
  async executeTransactionByHash(safeTxHash: string, safeOffChain?: any): Promise<string> {
    console.log('üöÄ SafeOnChain: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ —Ö–µ—à—É:', safeTxHash)
    
    if (!this.isConnected()) {
      throw new Error('Safe –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω')
    }

    try {
      let safeTransaction: SafeTransaction

      if (safeOffChain) {
        // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∏–∑ STS
        console.log('üì° –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∏–∑ STS...')
        const txFromSTS = await safeOffChain.getTransaction(safeTxHash)
        
        // –°–æ–∑–¥–∞–µ–º SafeTransaction –∏–∑ –¥–∞–Ω–Ω—ã—Ö STS
        safeTransaction = await this.createSafeTransaction({
          to: txFromSTS.to,
          value: txFromSTS.value || '0',
          data: txFromSTS.data || '0x'
        })
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ STS
        if (txFromSTS.nonce !== undefined) {
          safeTransaction.data.nonce = parseInt(txFromSTS.nonce.toString())
        }
        
        console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ STS')
      } else {
        throw new Error('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ —Ö–µ—à—É —Ç—Ä–µ–±—É–µ—Ç—Å—è SafeOffChain –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö')
      }

      // –í—ã–ø–æ–ª–Ω—è–µ–º —Å pre-approved –ø–æ–¥–ø–∏—Å—è–º–∏
      const result = await this.executeWithPreApprovals(safeTransaction)
      
      console.log('‚úÖ SafeOnChain: –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ —Ö–µ—à—É:', result.hash)
      return result.hash

    } catch (error) {
      console.error('‚ùå SafeOnChain: –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ —Ö–µ—à—É:', error)
      throw error
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —á–µ—Ä–µ–∑ SafeOffChain
  async getTransactionInfo(safeTxHash: string, safeOffChain?: any): Promise<any> {
    if (!safeOffChain) {
      throw new Error('–¢—Ä–µ–±—É–µ—Ç—Å—è SafeOffChain –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏')
    }

    try {
      const [txData, status] = await Promise.all([
        safeOffChain.getTransaction(safeTxHash),
        safeOffChain.getTransactionStatus(safeTxHash)
      ])

      return {
        safeTxHash,
        to: txData.to,
        value: txData.value || '0',
        data: txData.data || '0x',
        nonce: parseInt(txData.nonce?.toString() || '0'),
        isExecuted: status.isExecuted,
        confirmationsCount: status.confirmationsCount,
        requiredConfirmations: status.requiredConfirmations,
        canExecute: status.canExecute
      }
    } catch (error) {
      console.error('‚ùå SafeOnChain: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', error)
      throw error
    }
  }

  // –û–ü–¢–ò–ú–ê–õ–¨–ù–´–ô WORKFLOW: Pre-approve then anyone execute
  async executeWithPreApprovals(safeTransaction: SafeTransaction): Promise<any> {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º "–ª–µ–Ω–∏–≤—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é" —Å safeAddress —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å RPC –ø—Ä–æ–≤–µ—Ä–æ–∫
    const currentAddress = this.getCurrentSafeAddress()
    if (!currentAddress) {
      throw new Error('Safe –∞–¥—Ä–µ—Å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')
    }
    
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π SafeConfig —Å safeAddress (–±–µ–∑ RPC –ø—Ä–æ–≤–µ—Ä–æ–∫)
    const lazyConfig: SafeConfig = {
      provider: this.networkConfig.rpcUrl, // ‚Üê RPC –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏
      signer: await this.signer.getAddress(), // ‚Üê –ö–†–ò–¢–ò–ß–ù–û! –ê–¥—Ä–µ—Å signer –¥–ª—è approved hash –æ–ø–µ—Ä–∞—Ü–∏–π
      safeAddress: currentAddress, // ‚Üê –õ–µ–Ω–∏–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
      contractNetworks: this.contractNetworks
    }
    
    const safeSdk = await Safe.init(lazyConfig)
    
    // –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Safe –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç
    const isDeployed = await safeSdk.isSafeDeployed()
    if (!isDeployed) {
      throw new Error(`Safe –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç! –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ Safe –ø–æ –∞–¥—Ä–µ—Å—É: ${currentAddress}`)
    }
    
    const threshold = await safeSdk.getThreshold()
    const txHash = await safeSdk.getTransactionHash(safeTransaction)
    
    console.log('üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º pre-approved –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è...')
    console.log('üìã –•—ç—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', txHash)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ç–æ —É–∂–µ –æ–¥–æ–±—Ä–∏–ª —á–µ—Ä–µ–∑ approveHash() –∑–∞—Ä–∞–Ω–µ–µ
    const preApprovedOwners = await this.checkApprovedOwners(txHash)
    
    console.log(`üéØ –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–µ–π: ${threshold}`)
    console.log(`‚úÖ Pre-approved: ${preApprovedOwners.length}`)
    console.log(`üë• –û–¥–æ–±—Ä–∏–ª–∏: [${preApprovedOwners.join(', ')}]`)
    
    if (preApprovedOwners.length < threshold) {
      const missing = threshold - preApprovedOwners.length
      throw new Error(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ pre-approved –ø–æ–¥–ø–∏—Å–µ–π! –¢—Ä–µ–±—É–µ—Ç—Å—è: ${threshold}, –µ—Å—Ç—å: ${preApprovedOwners.length}. –ù—É–∂–Ω–æ –µ—â–µ ${missing} –ø–æ–¥–ø–∏—Å–µ–π.`)
    }
    
    // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ approved hash –ø–æ–¥–ø–∏—Å–∏
    const emptyTransaction = await safeSdk.createTransaction({ 
      transactions: [safeTransaction.data] 
    })
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –ø–æ –∞–¥—Ä–µ—Å–∞–º (—Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ Safe GS026)
    const sortedOwners = preApprovedOwners.sort((a, b) => 
      a.toLowerCase().localeCompare(b.toLowerCase())
    )
    
    console.log('üîÑ –°–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ pre-approved –≤–ª–∞–¥–µ–ª—å—Ü—ã:', sortedOwners)
    
    // –î–æ–±–∞–≤–ª—è–µ–º approved hash –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ pre-approved –≤–ª–∞–¥–µ–ª—å—Ü–∞
    sortedOwners.forEach(owner => {
      const approvedSignature = {
        signer: owner.toLowerCase(),
        data: `0x${owner.slice(2).padStart(64, '0')}${'0'.repeat(64)}01`,
        isContractSignature: false,
        staticPart: () => `0x${owner.slice(2).padStart(64, '0')}${'0'.repeat(64)}01`,
        dynamicPart: () => ''
      }
      
      emptyTransaction.addSignature(approvedSignature)
      console.log(`üìù –î–æ–±–∞–≤–ª–µ–Ω–∞ approved –ø–æ–¥–ø–∏—Å—å –¥–ª—è: ${owner}`)
    })
    
    console.log('üöÄ –í—ã–ø–æ–ª–Ω—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å pre-approved –ø–æ–¥–ø–∏—Å—è–º–∏...')
    console.log(`üìä –ò—Å–ø–æ–ª—å–∑—É–µ–º ${sortedOwners.length} approved hash –ø–æ–¥–ø–∏—Å–µ–π`)
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é (–º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –õ–Æ–ë–û–ô, –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–ª–∞–¥–µ–ª–µ—Ü)
    const executeTxResponse = await safeSdk.executeTransaction(emptyTransaction)
    
    console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ pre-approval –º–µ—Ö–∞–Ω–∏–∑–º!')
    console.log('üîó –•—ç—à –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', executeTxResponse.hash)
    
    return {
      hash: executeTxResponse.hash,
      response: executeTxResponse,
      preApprovedOwners: sortedOwners,
      usedSignatures: sortedOwners.length,
      threshold: threshold,
      executedBy: await this.signer.getAddress()
    }
  }

}

// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Safe
export function createSafeConnectionForm(
  safeAddress: string,
  owners: string[],
  threshold: number,
  options?: {
    safeVersion?: string
    fallbackHandler?: string
  }
): SafeConnectionForm {
  return {
    safeAddress,
    owners,
    threshold,
    safeVersion: options?.safeVersion || '1.4.1',
    fallbackHandler: options?.fallbackHandler
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è Safe
export function createSafeCreationForm(
  owners: string[],
  threshold: number,
  options?: {
    safeVersion?: string
    fallbackHandler?: string
  }
): SafeCreationForm {
  return {
    owners,
    threshold,
    safeVersion: options?.safeVersion || '1.4.1',
    fallbackHandler: options?.fallbackHandler
  }
}

export default SafeOnChain
