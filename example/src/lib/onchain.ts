import { ethers } from 'ethers'
import { getSafeConfig } from './network-types'
import Safe from '@safe-global/protocol-kit'
import {
  SafeTransaction,
  MetaTransactionData,
  TransactionResult,
} from '@safe-global/types-kit'
import {
  SafeAccountConfig,
  PredictedSafeProps,
  SafeConfig,
} from '@safe-global/protocol-kit'

import {
  getNetworkConfig,
  createContractNetworksConfig
} from './safe-common'
import { SafeOffChain, UniversalOperationResult } from './offchain'
import { Network } from './network-types'

export interface TransactionParams {
  to: string
  value: string
  data: string
}

export interface SafeConnectionForm {
  safeAddress: string
  owners: string[]
  threshold: number
  safeVersion?: string
  fallbackHandler?: string
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ Safe
export interface SafeCreationForm {
  owners: string[]
  threshold: number
  safeVersion?: string
  fallbackHandler?: string
}

export interface UniversalFunctionCall {
  contractAddress: string
  functionSignature: string
  functionParams: any[]
  value?: string
}

interface ExecuteTransactionResponse {
  hash: string
  response: TransactionResult
  totalSignatures: number
  threshold: number
  executedBy: string
  usedSignatures: number
}

export class SafeOnChain {
  private network: Network
  private networkConfig = getNetworkConfig()
  private contractNetworks = createContractNetworksConfig(this.networkConfig)
  private safeSdk: Safe | null = null
  currentSafeAddress: string | null = null

  constructor(network: Network) {
    this.network = network
    console.log('üåê SafeOnChain: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å Network:', {
      chainId: network.id.toString(),
      hasProvider: !!network.provider,
      hasSigner: !!network.signer
    })
  }

  private sortOwners(owners: string[]): string[] {
    return [...owners].sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))
  }

  getSafeSdk(): Safe {
    if (!this.safeSdk) {
      throw new Error('Safe –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ Safe.')
    }
    return this.safeSdk
  }

  isConnected(): boolean {
    const hasSafeSdk = this.safeSdk !== null
    const hasCurrentSafeAddress = this.currentSafeAddress !== null
    return hasSafeSdk && hasCurrentSafeAddress
  }

  async createSafeWithForm(form: SafeCreationForm): Promise<Safe> {
    const { owners, threshold } = form

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –∞–¥—Ä–µ—Å–∞ Safe
    const sortedOwners = this.sortOwners(owners)

    console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ Safe —Å —Ñ–æ—Ä–º–æ–π:', {
      originalOwners: owners,
      sortedOwners,
      threshold
    })

    const safeAccountConfig: SafeAccountConfig = {
      owners: sortedOwners,
      threshold,
      fallbackHandler: form.fallbackHandler || this.networkConfig.contracts.compatibilityFallbackHandler
    }

    console.log('üìã SafeAccountConfig:', safeAccountConfig)
    console.log('üåê Contract networks:', this.contractNetworks)

    const predictedSafe: PredictedSafeProps = {
      safeAccountConfig,
      safeDeploymentConfig: {
        safeVersion: '1.4.1'
      }
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é getSafeConfig
    console.log('üîç Network eip1193Provider:', this.network.eip1193Provider)

    const safeConfig = await getSafeConfig(this.network, {
      predictedSafe,
      contractNetworks: this.contractNetworks
    })

    try {
      console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Safe SDK...', safeConfig)
      const safeSdk = await Safe.init(safeConfig)

      console.log('üîÆ –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å...')
      const predictedAddress = await safeSdk.getAddress()
      console.log('üìç Predicted Safe address:', predictedAddress)


      const provider = this.network.provider
      const existingCode = await provider.getCode(predictedAddress)

      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞:')
      console.log('  üìç –ê–¥—Ä–µ—Å:', predictedAddress)
      console.log('  üìã –ö–æ–¥:', existingCode)
      console.log('  üìè –î–ª–∏–Ω–∞:', existingCode?.length || 0)
      console.log('  ‚úÖ –£—Å–ª–æ–≤–∏–µ existingCode:', !!existingCode)
      console.log('  ‚úÖ –£—Å–ª–æ–≤–∏–µ !== "0x":', existingCode !== '0x')
      console.log('  ‚úÖ –£—Å–ª–æ–≤–∏–µ length > 2:', (existingCode?.length || 0) > 2)
      console.log('  üéØ –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', !!(existingCode && existingCode !== '0x' && existingCode.length > 2))

      if (existingCode && existingCode !== '0x' && existingCode.length > 2) {
        console.log('üîç –ü–æ –∞–¥—Ä–µ—Å—É –µ—Å—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º —ç—Ç–æ –ª–∏ Safe...')
        console.log('üìç –ê–¥—Ä–µ—Å:', predictedAddress)

        try {

          const existingSafeConfig = await getSafeConfig(this.network, {
            safeAddress: predictedAddress,
            contractNetworks: this.contractNetworks
          })

          console.log('üîÑ –ü—Ä–æ–±—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ Safe...')
          const existingSafeSdk = await Safe.init(existingSafeConfig)


          console.log('‚úÖ –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ Safe! –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –Ω–µ–º—É...')
          console.log('üîÑ –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï: PREDICT MODE ‚Üí ADDRESS MODE')
          console.log('üë• –ò—Å—Ö–æ–¥–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü—ã:', form.owners)
          console.log('üë• –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü—ã:', sortedOwners)
          console.log('üî¢ –ü–æ—Ä–æ–≥:', form.threshold)


          this.safeSdk = existingSafeSdk
          this.currentSafeAddress = predictedAddress

          console.log('üîó –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É Safe –≤ ADDRESS MODE:', predictedAddress)
          return existingSafeSdk

        } catch (error) {
          console.log('‚ö†Ô∏è –ö–æ–Ω—Ç—Ä–∞–∫—Ç –ø–æ –∞–¥—Ä–µ—Å—É —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ —ç—Ç–æ –Ω–µ Safe:', error)
          console.log('üöÄ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Safe...')

        }
      }

      console.log('‚úÖ –ê–¥—Ä–µ—Å —Å–≤–æ–±–æ–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º Safe...')

      console.log('üõ†Ô∏è Deploying Safe –≤ PREDICT MODE...')
      const deploymentTransaction = await safeSdk.createSafeDeploymentTransaction()
      const txResponse = await this.network.signer.sendTransaction({
        to: deploymentTransaction.to,
        value: deploymentTransaction.value,
        data: deploymentTransaction.data
      })

      console.log('üìù Safe deployment transaction:', txResponse.hash)

      const receipt = await txResponse.wait?.()
      console.log('‚úÖ Safe deployed in block:', receipt?.blockNumber)

      const deployedSafeAddress = await safeSdk.getAddress()
      this.safeSdk = safeSdk
      this.currentSafeAddress = deployedSafeAddress

      console.log('üéâ Safe —Å–æ–∑–¥–∞–Ω –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ ADDRESS MODE:', deployedSafeAddress)

      const [version, owners, threshold, nonce, balance] = await Promise.all([
        safeSdk.getContractVersion(),
        safeSdk.getOwners(),
        safeSdk.getThreshold(),
        safeSdk.getNonce(),
        safeSdk.getBalance()
      ])

      console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Safe:')
      console.log('  üîç –í–µ—Ä—Å–∏—è:', version)
      console.log('  üë• –í–ª–∞–¥–µ–ª—å—Ü—ã:', owners)
      console.log('  üî¢ –ü–æ—Ä–æ–≥:', threshold)
      console.log('  üìù Nonce:', nonce)
      console.log('  üí∞ –ë–∞–ª–∞–Ω—Å:', balance)

      return safeSdk

    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Safe:', error.message)
      throw error
    }
  }

  async connectToSafeWithForm(form: SafeConnectionForm): Promise<Safe> {
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Safe —Å —Ñ–æ—Ä–º–æ–π:')
    console.log('  üìç –ê–¥—Ä–µ—Å:', form.safeAddress)
    console.log('  üë• –í–ª–∞–¥–µ–ª—å—Ü—ã:', form.owners)
    console.log('  üî¢ –ü–æ—Ä–æ–≥:', form.threshold)
    console.log('  üîñ –í–µ—Ä—Å–∏—è:', form.safeVersion)

    try {
      const safeConfig = await getSafeConfig(this.network, {
        safeAddress: form.safeAddress,
        contractNetworks: this.contractNetworks,
      })

      console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Safe SDK –¥–ª—è –°–£–©–ï–°–¢–í–£–Æ–©–ï–ì–û Safe...')
      const safeSdk = await Safe.init(safeConfig)

      this.safeSdk = safeSdk
      this.currentSafeAddress = form.safeAddress

      console.log('‚úÖ Safe —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω:', form.safeAddress)

      const [actualOwners, actualThreshold, nonce, balance] = await Promise.all([
        safeSdk.getOwners(),
        safeSdk.getThreshold(),
        safeSdk.getNonce(),
        safeSdk.getBalance()
      ])

      console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–º Safe:')
      console.log('  üë• –í–ª–∞–¥–µ–ª—å—Ü—ã:', actualOwners)
      console.log('  üî¢ –ü–æ—Ä–æ–≥:', actualThreshold)
      console.log('  üìù Nonce:', nonce)
      console.log('  üí∞ –ë–∞–ª–∞–Ω—Å:', ethers.formatEther(balance), 'ETH')

      if (actualOwners.length !== form.owners.length || actualThreshold !== form.threshold) {
        console.warn('‚ö†Ô∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä–º—ã –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ä–µ–∞–ª—å–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º Safe!')
        console.warn('  –§–æ—Ä–º–∞ –≤–ª–∞–¥–µ–ª—å—Ü—ã/–ø–æ—Ä–æ–≥:', form.owners.length, '/', form.threshold)
        console.warn('  –†–µ–∞–ª—å–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü—ã/–ø–æ—Ä–æ–≥:', actualOwners.length, '/', actualThreshold)
      }

      return safeSdk

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Safe:', error)
      this.safeSdk = null
      this.currentSafeAddress = null
      throw error
    }
  }


  disconnect(): void {
    console.log('üîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç Safe:', this.currentSafeAddress)
    this.safeSdk = null
    this.currentSafeAddress = null
  }

  async getSafeAddressByForm(form: SafeCreationForm): Promise<string> {
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –∞–¥—Ä–µ—Å–∞ Safe
    const sortedOwners = this.sortOwners(form.owners)

    console.log('üîÆ –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å Safe –ø–æ —Ñ–æ—Ä–º–µ...')
    console.log('üë• –ò—Å—Ö–æ–¥–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü—ã:', form.owners)
    console.log('üë• –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü—ã:', sortedOwners)
    console.log('üî¢ –ü–æ—Ä–æ–≥:', form.threshold)

    try {
      const predictedSafe: PredictedSafeProps = {
        safeAccountConfig: {
          owners: sortedOwners,
          threshold: form.threshold,
          fallbackHandler: form.fallbackHandler || this.networkConfig.contracts.compatibilityFallbackHandler
        },
        safeDeploymentConfig: {
          safeVersion: '1.4.1'
        }
      }

      const safeConfig = await getSafeConfig(this.network, {
        predictedSafe,
        contractNetworks: this.contractNetworks,
      })

      const safeSdk = await Safe.init(safeConfig)
      const predictedAddress = await safeSdk.getAddress()

      console.log('üìç –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å Safe:', predictedAddress)
      return predictedAddress

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ Safe:', error)
      throw error
    }
  }

  async isSafeDeployed(safeAddress: string): Promise<boolean> {
    try {
      const provider = this.network.provider
      const code = await provider.getCode(safeAddress)

      console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Safe –ø–æ –∞–¥—Ä–µ—Å—É ${safeAddress}:`, {
        codeLength: code.length,
        hasCode: code && code !== '0x' && code.length > 2
      })

      if (!code || code === '0x' || code.length <= 2) {
        console.log('‚ùå Safe –Ω–µ –Ω–∞–π–¥–µ–Ω - –Ω–µ—Ç –∫–æ–¥–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞')
        return false
      }

      console.log('‚úÖ Safe –Ω–∞–π–¥–µ–Ω - –µ—Å—Ç—å –∫–æ–¥ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞')
      return true
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Safe –ø–æ –∞–¥—Ä–µ—Å—É:', safeAddress, error)
      return false
    }
  }

  async getCurrentSafeInfo() {
    const safeSdk = this.getSafeSdk()

    if (!this.currentSafeAddress) {
      throw new Error('–ê–¥—Ä–µ—Å Safe –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')
    }

    const isDeployed = await safeSdk.isSafeDeployed()

    console.log('üîç Safe –¥–µ–ø–ª–æ–µ–Ω:', isDeployed)
    console.log('üîç Safe safeSdk.getOwners:', await safeSdk.getOwners())
    console.log('üîç Safe safeSdk.getThreshold:', await safeSdk.getThreshold())
    console.log('üîç Safe safeSdk.getBalance:', await safeSdk.getBalance())
    console.log('üîç Safe safeSdk.getNonce:', await safeSdk.getNonce())
    console.log('üîç Safe safeSdk.getContractVersion:', await safeSdk.getContractVersion())

    const [owners, threshold, balance, nonce, version] = await Promise.all([
      safeSdk.getOwners(),
      safeSdk.getThreshold(),
      safeSdk.getBalance(),
      safeSdk.getNonce(),
      safeSdk.getContractVersion()
    ])

    console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Safe:')
    console.log('  üë• –í–ª–∞–¥–µ–ª—å—Ü—ã:', owners)
    console.log('  üî¢ –ü–æ—Ä–æ–≥:', threshold)
    console.log('  üí∞ –ë–∞–ª–∞–Ω—Å:', ethers.formatEther(balance), 'ETH')
    console.log('  üìù Nonce:', nonce)
    console.log('  üîñ –í–µ—Ä—Å–∏—è:', version)

    return {
      address: this.currentSafeAddress,
      owners,
      threshold,
      balance: ethers.formatEther(balance),
      nonce,
      version,
      isDeployed: await safeSdk.isSafeDeployed()
    }
  }

  encodeFunctionCall(functionCall: UniversalFunctionCall): string {
    try {
      console.log('üîß –ö–æ–¥–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏:', functionCall.functionSignature)
      console.log('üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:', functionCall.functionParams)

      const functionAbi = [`function ${functionCall.functionSignature}`]
      const contractInterface = new ethers.Interface(functionAbi)

      const functionName = functionCall.functionSignature.split('(')[0]

      const encodedData = contractInterface.encodeFunctionData(functionName, functionCall.functionParams)

      console.log('‚úÖ –ó–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', encodedData)
      return encodedData

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏:', error)
      throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é ${functionCall.functionSignature}: ${error}`)
    }
  }

  async createUniversalTransactionHash(
    functionCall: UniversalFunctionCall
  ): Promise<UniversalOperationResult> {
    console.log('üèóÔ∏è –°–æ–∑–¥–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ Safe...')

    const safeSdk = this.getSafeSdk()

    if (!this.currentSafeAddress) {
      throw new Error('Safe –∞–¥—Ä–µ—Å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')
    }

    try {
      const encodedData = this.encodeFunctionCall(functionCall)

      const transactionParams: TransactionParams = {
        to: functionCall.contractAddress,
        value: functionCall.value || '0',
        data: encodedData
      }

      console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:')
      console.log(`   - Safe: ${this.currentSafeAddress}`)
      console.log(`   - To: ${transactionParams.to}`)
      console.log(`   - Value: ${transactionParams.value} ETH`)
      console.log(`   - Data: ${transactionParams.data}`)

      const safeTransaction = await this.createSafeTransaction(transactionParams)

      const nonce = safeTransaction.data.nonce
      console.log(`   - Nonce (–∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏): ${nonce}`)

      // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º —Ö–µ—à–∞
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...')
      try {
        const isValid = await safeSdk.isValidTransaction(safeTransaction)
        
        if (!isValid) {
          console.error('‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é!')
          throw new Error('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: –Ω–µ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é Safe SDK')
        }
        
        console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é —É—Å–ø–µ—à–Ω–æ')
      } catch (validationError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', validationError)
        throw new Error(`–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: ${validationError}`)
      }

      const transactionHash = await safeSdk.getTransactionHash(safeTransaction)

      console.log('üéØ –•–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏:', transactionHash)

      return {
        transactionHash,
        safeTransaction,
        encodedData,
        transactionDetails: {
          to: transactionParams.to,
          value: transactionParams.value,
          data: transactionParams.data,
          nonce
        }
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', error)
      throw error
    }
  }

  async createSafeTransaction(
    transactionParams: TransactionParams
  ): Promise<SafeTransaction> {
    const safeSdk = this.getSafeSdk()

    const metaTransactionData: MetaTransactionData = {
      to: transactionParams.to,
      value: ethers.parseEther(transactionParams.value).toString(),
      data: transactionParams.data
    }

    const safeTransaction = await safeSdk.createTransaction({
      transactions: [metaTransactionData]
    })
    return safeTransaction
  }

  async executeTransactionByHash(safeTxHash: string, safeOffChain?: SafeOffChain): Promise<string> {
    console.log('üöÄ SafeOnChain: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ —Ö–µ—à—É:', safeTxHash)

    if (!this.isConnected()) {
      throw new Error('Safe –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω')
    }

    try {
      let safeTransaction: SafeTransaction

      if (safeOffChain) {

        console.log('üì° –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∏–∑ STS...')
        const txFromSTS = await safeOffChain.getTransaction(safeTxHash)

        safeTransaction = await this.createSafeTransaction({
          to: txFromSTS.to,
          value: txFromSTS.value || '0',
          data: txFromSTS.data || '0x'
        })


        if (txFromSTS.nonce !== undefined) {
          safeTransaction.data.nonce = parseInt(txFromSTS.nonce.toString())
        }

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –í–°–ï –ø–æ–¥–ø–∏—Å–∏ –∏–∑ confirmations STS (–Ω–µ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Ç–∏–ø—É)
        if (txFromSTS.confirmations && txFromSTS.confirmations.length > 0) {
          console.log(`üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ${txFromSTS.confirmations.length} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –∏–∑ STS...`)

          for (const confirmation of txFromSTS.confirmations) {
            if (confirmation.signature && confirmation.signature !== '0x') {
              console.log(`üìù –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –æ—Ç ${confirmation.owner} (—Ç–∏–ø: ${confirmation.signatureType})`)

              // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å –¥–ª—è SafeSDK
              const signature = {
                signer: confirmation.owner.toLowerCase(),
                data: confirmation.signature,
                isContractSignature: false,
                staticPart: () => confirmation.signature,
                dynamicPart: () => ''
              }

              safeTransaction.addSignature(signature)
            } else if (confirmation.signatureType !== 'EOA') {
              // –î–ª—è non-EOA –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π (approve hash) —Å–æ–∑–¥–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å—å
              console.log(`üìù –î–æ–±–∞–≤–ª—è–µ–º approve hash –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç ${confirmation.owner}`)

              const approveSignature = {
                signer: confirmation.owner.toLowerCase(),
                data: `0x${confirmation.owner.slice(2).padStart(64, '0')}${'0'.repeat(64)}01`,
                isContractSignature: false,
                staticPart: () => `0x${confirmation.owner.slice(2).padStart(64, '0')}${'0'.repeat(64)}01`,
                dynamicPart: () => ''
              }

              safeTransaction.addSignature(approveSignature)
            }
          }

          console.log(`‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ${safeTransaction.signatures.size} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –∏–∑ STS`)
        }

        console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ STS')
      } else {
        throw new Error('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ —Ö–µ—à—É —Ç—Ä–µ–±—É–µ—Ç—Å—è SafeOffChain –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö')
      }

      const result = await this.executeTransaction(safeTransaction)

      console.log('‚úÖ SafeOnChain: –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ —Ö–µ—à—É:', result.hash)
      return result.hash

    } catch (error) {
      console.error('‚ùå SafeOnChain: –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ —Ö–µ—à—É:', error)
      throw error
    }
  }

  async executeTransaction(safeTransaction: SafeTransaction): Promise<ExecuteTransactionResponse> {
    if (!this.currentSafeAddress) {
      throw new Error('Safe –∞–¥—Ä–µ—Å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')
    }

    const lazyConfig = await getSafeConfig(this.network, {
      safeAddress: this.currentSafeAddress,
      contractNetworks: this.contractNetworks
    })

    const safeSdk = await Safe.init(lazyConfig)

    const isDeployed = await safeSdk.isSafeDeployed()
    if (!isDeployed) {
      throw new Error(`Safe –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç! –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ Safe –ø–æ –∞–¥—Ä–µ—Å—É: ${this.currentSafeAddress}`)
    }

    const threshold = await safeSdk.getThreshold()
    const txHash = await safeSdk.getTransactionHash(safeTransaction)

    console.log('üöÄ –í—ã–ø–æ–ª–Ω—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å –ø–æ–¥–ø–∏—Å—è–º–∏ –∏–∑ STS...')
    console.log('üìã –•—ç—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', txHash)

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å–∏ –∏–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–≤—Å–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –∏–∑ STS)
    const signatures = safeTransaction.signatures.size
    const signers = Array.from(safeTransaction.signatures.values()).map(sig => sig.signer)

    console.log(`üéØ –¢—Ä–µ–±—É–µ—Ç—Å—è: ${threshold}`)
    console.log(`üìù –ü–æ–¥–ø–∏—Å–µ–π –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${signatures}`)
    console.log(`üë• –ü–æ–¥–ø–∏—Å–∞–Ω—Ç—ã: [${signers.join(', ')}]`)

    if (signatures < threshold) {
      const missing = threshold - signatures
      throw new Error(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–¥–ø–∏—Å–µ–π! –¢—Ä–µ–±—É–µ—Ç—Å—è: ${threshold}, –µ—Å—Ç—å: ${signatures}. –ù—É–∂–Ω–æ –µ—â–µ ${missing} –ø–æ–¥–ø–∏—Å–µ–π.`)
    }

    // –§–∏–Ω–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
    console.log('üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º...')
    try {
      const isValid = await safeSdk.isValidTransaction(safeTransaction)
      
      if (!isValid) {
        console.error('‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ —Ñ–∏–Ω–∞–ª—å–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é!')
        throw new Error('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: –Ω–µ –ø—Ä–æ—à–ª–∞ —Ñ–∏–Ω–∞–ª—å–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é Safe SDK')
      }
      
      console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–æ—à–ª–∞ —Ñ–∏–Ω–∞–ª—å–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é —É—Å–ø–µ—à–Ω–æ')
    } catch (validationError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', validationError)
      throw new Error(`–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: ${validationError}`)
    }

    const executeTxResponse = await safeSdk.executeTransaction(safeTransaction)

    console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!')
    console.log('üîó –•—ç—à –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', executeTxResponse.hash)

    return {
      hash: executeTxResponse.hash,
      response: executeTxResponse,
      totalSignatures: signatures,
      threshold: threshold,
      executedBy: await this.network.signer.getAddress(),
      usedSignatures: signatures
    }
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Safe
export function createSafeConnectionForm(
  safeAddress: string,
  owners: string[],
  threshold: number,
  options?: {
    safeVersion?: string
    fallbackHandler?: string
  }
): SafeConnectionForm {
  return {
    safeAddress,
    owners,
    threshold,
    safeVersion: options?.safeVersion || '1.4.1',
    fallbackHandler: options?.fallbackHandler
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è Safe
export function createSafeCreationForm(
  owners: string[],
  threshold: number,
  options?: {
    safeVersion?: string
    fallbackHandler?: string
  }
): SafeCreationForm {
  return {
    owners,
    threshold,
    safeVersion: options?.safeVersion || '1.4.1',
    fallbackHandler: options?.fallbackHandler
  }
}

export default SafeOnChain
