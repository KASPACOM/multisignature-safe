{"abi":[{"type":"function","name":"performCreate","inputs":[{"name":"value","type":"uint256","internalType":"uint256"},{"name":"deploymentData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"newContract","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"performCreate2","inputs":[{"name":"value","type":"uint256","internalType":"uint256"},{"name":"deploymentData","type":"bytes","internalType":"bytes"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"newContract","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"event","name":"ContractCreation","inputs":[{"name":"newContract","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x6080806040523460155761020b908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80634847be6f146100b557634c8c9ea11461003257600080fd5b346100b05760403660031901126100b05760243567ffffffffffffffff81116100b057610065602091369060040161010a565b80516001600160a01b03918301600435f016610082811515610189565b60405190807f4db17dd5e4732fb6da34a148104a592783ca119a1e7bb8829eba6cbadef0b511600080a28152f35b600080fd5b346100b05760603660031901126100b05760243567ffffffffffffffff81116100b0576100e8602091369060040161010a565b80516001600160a01b039160443591908401600435f516610082811515610189565b81601f820112156100b05780359067ffffffffffffffff82116101735760405192601f8301601f19908116603f0116840167ffffffffffffffff81118582101761017357604052828452602083830101116100b057816000926020809301838601378301015290565b634e487b7160e01b600052604160045260246000fd5b1561019057565b60405162461bcd60e51b815260206004820152601960248201527f436f756c64206e6f74206465706c6f7920636f6e7472616374000000000000006044820152606490fdfea26469706673582212200fc8bd117c2d76396b8258f99438b11d206c21dff2752ee8ba7ea6b2b403ff2564736f6c634300081a0033","sourceMap":"325:1832:59:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436101561001257600080fd5b60003560e01c80634847be6f146100b557634c8c9ea11461003257600080fd5b346100b05760403660031901126100b05760243567ffffffffffffffff81116100b057610065602091369060040161010a565b80516001600160a01b03918301600435f016610082811515610189565b60405190807f4db17dd5e4732fb6da34a148104a592783ca119a1e7bb8829eba6cbadef0b511600080a28152f35b600080fd5b346100b05760603660031901126100b05760243567ffffffffffffffff81116100b0576100e8602091369060040161010a565b80516001600160a01b039160443591908401600435f516610082811515610189565b81601f820112156100b05780359067ffffffffffffffff82116101735760405192601f8301601f19908116603f0116840167ffffffffffffffff81118582101761017357604052828452602083830101116100b057816000926020809301838601378301015290565b634e487b7160e01b600052604160045260246000fd5b1561019057565b60405162461bcd60e51b815260206004820152601960248201527f436f756c64206e6f74206465706c6f7920636f6e7472616374000000000000006044820152606490fdfea26469706673582212200fc8bd117c2d76396b8258f99438b11d206c21dff2752ee8ba7ea6b2b403ff2564736f6c634300081a0033","sourceMap":"325:1832:59:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;325:1832:59;;;;;;;;;;;;;;;;;;;:::i;:::-;1873:111;;-1:-1:-1;;;;;325:1832:59;1873:111;;325:1832;;1873:111;325:1832;2041:63;2049:25;;;2041:63;:::i;:::-;325:1832;;2119:29;;;325:1832;2119:29;;325:1832;;;;;;;;;;;;;-1:-1:-1;;325:1832:59;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:118;;-1:-1:-1;;;;;325:1832:59;;;;1063:118;;;325:1832;;1063:118;325:1832;1238:63;1246:25;;;1238:63;:::i;325:1832::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;325:1832:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;325:1832:59;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;325:1832:59;;;;;-1:-1:-1;325:1832:59;;;;;:::o;:::-;;;-1:-1:-1;;;325:1832:59;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"methodIdentifiers":{"performCreate(uint256,bytes)":"4c8c9ea1","performCreate2(uint256,bytes,bytes32)":"4847be6f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deploymentData\",\"type\":\"bytes\"}],\"name\":\"performCreate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deploymentData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"performCreate2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Richard Meissner - @rmeissner\",\"kind\":\"dev\",\"methods\":{\"performCreate(uint256,bytes)\":{\"params\":{\"deploymentData\":\"The initialisation code of the contract to be created.\",\"value\":\"The value in wei to be sent with the contract creation.\"},\"returns\":{\"newContract\":\"The address of the newly created contract.\"}},\"performCreate2(uint256,bytes,bytes32)\":{\"params\":{\"deploymentData\":\"The initialisation code of the contract to be created.\",\"salt\":\"The salt value to use for the contract creation.\",\"value\":\"The value in wei to be sent with the contract creation.\"},\"returns\":{\"newContract\":\"The address of the newly created contract.\"}}},\"title\":\"Create Call - Allows to use the different create opcodes to deploy a contract.\",\"version\":1},\"userdoc\":{\"events\":{\"ContractCreation(address)\":{\"notice\":\"Emitted when a new contract is created\"}},\"kind\":\"user\",\"methods\":{\"performCreate(uint256,bytes)\":{\"notice\":\"Deploys a new contract using the create opcode.\"},\"performCreate2(uint256,bytes,bytes32)\":{\"notice\":\"Deploys a new contract using the create2 opcode.\"}},\"notice\":\"This contract provides functions for deploying a new contract using the create and create2 opcodes.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/CreateCall.sol\":\"CreateCall\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"],\"viaIR\":true},\"sources\":{\"src/libraries/CreateCall.sol\":{\"keccak256\":\"0xb1cd31a0d19e714bdf46ad4451b38894ae61f117571043f3cba3d5078c840af7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e03bf200a22893b4fd6d53aafcda8a3daad87b978fb114b272924c04461369e1\",\"dweb:/ipfs/QmbDY1jXgDyitvfC2ThnDzN5pZVEgbWwAT9Ux2grVUn63E\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"newContract","type":"address","indexed":true}],"type":"event","name":"ContractCreation","anonymous":false},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"deploymentData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"performCreate","outputs":[{"internalType":"address","name":"newContract","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"deploymentData","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"performCreate2","outputs":[{"internalType":"address","name":"newContract","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"performCreate(uint256,bytes)":{"params":{"deploymentData":"The initialisation code of the contract to be created.","value":"The value in wei to be sent with the contract creation."},"returns":{"newContract":"The address of the newly created contract."}},"performCreate2(uint256,bytes,bytes32)":{"params":{"deploymentData":"The initialisation code of the contract to be created.","salt":"The salt value to use for the contract creation.","value":"The value in wei to be sent with the contract creation."},"returns":{"newContract":"The address of the newly created contract."}}},"version":1},"userdoc":{"kind":"user","methods":{"performCreate(uint256,bytes)":{"notice":"Deploys a new contract using the create opcode."},"performCreate2(uint256,bytes,bytes32)":{"notice":"Deploys a new contract using the create2 opcode."}},"version":1}},"settings":{"remappings":["erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/libraries/CreateCall.sol":"CreateCall"},"evmVersion":"berlin","libraries":{},"viaIR":true},"sources":{"src/libraries/CreateCall.sol":{"keccak256":"0xb1cd31a0d19e714bdf46ad4451b38894ae61f117571043f3cba3d5078c840af7","urls":["bzz-raw://e03bf200a22893b4fd6d53aafcda8a3daad87b978fb114b272924c04461369e1","dweb:/ipfs/QmbDY1jXgDyitvfC2ThnDzN5pZVEgbWwAT9Ux2grVUn63E"],"license":"LGPL-3.0-only"}},"version":1},"id":59}