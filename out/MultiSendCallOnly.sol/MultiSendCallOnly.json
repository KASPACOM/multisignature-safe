{"abi":[{"type":"function","name":"multiSend","inputs":[{"name":"transactions","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b506101b68061001f6000396000f3fe60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b6100366100313660046100c7565b610038565b005b805160205b818110156100ac578083015160f81c6001820184015160601c601583018501516035840186015160558501870160008560008114610082576001811461001e5761008e565b6000808585888a5af191505b508061009957600080fd5b505080605501850194505050505061003d565b505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156100d957600080fd5b813567ffffffffffffffff8111156100f057600080fd5b8201601f8101841361010157600080fd5b803567ffffffffffffffff81111561011b5761011b6100b1565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561014a5761014a6100b1565b60405281815282820160200186101561016257600080fd5b8160208401602083013760009181016020019190915294935050505056fea264697066735822122087ca828953b086aa2c61821d5a7e894565655754099f158a30a5e25bd34d786564736f6c634300081a0033","sourceMap":"360:3059:45:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b6100366100313660046100c7565b610038565b005b805160205b818110156100ac578083015160f81c6001820184015160601c601583018501516035840186015160558501870160008560008114610082576001811461001e5761008e565b6000808585888a5af191505b508061009957600080fd5b505080605501850194505050505061003d565b505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156100d957600080fd5b813567ffffffffffffffff8111156100f057600080fd5b8201601f8101841361010157600080fd5b803567ffffffffffffffff81111561011b5761011b6100b1565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561014a5761014a6100b1565b60405281815282820160200186101561016257600080fd5b8160208401602083013760009181016020019190915294935050505056fea264697066735822122087ca828953b086aa2c61821d5a7e894565655754099f158a30a5e25bd34d786564736f6c634300081a0033","sourceMap":"360:3059:45:-:0;;;;;;;;;;;;;;;;;;;;;1348:2069;;;;;;:::i;:::-;;:::i;:::-;;;1518:12;1512:19;1553:4;1570:1831;1653:6;1650:1;1647:13;1570:1831;;;2044:1;2030:12;2026:20;2020:27;2014:4;2010:38;2318:4;2315:1;2311:12;2297;2293:31;2287:38;2281:4;2277:49;2480:4;2477:1;2473:12;2459;2455:31;2449:38;2663:4;2660:1;2656:12;2642;2638:31;2632:38;2857:4;2854:1;2850:12;2836;2832:31;2895:1;2920:9;2951:1;2946:104;;;;3133:1;3128:59;;;;2913:274;;2946:104;3030:1;3027;3015:10;3009:4;3002:5;2998:2;2991:5;2986:46;2975:57;;2913:274;-1:-1:-1;3210:7:45;3204:70;;3254:1;3251;3244:12;3204:70;;;3375:10;3369:4;3365:21;3362:1;3358:29;3353:34;;;;;;1570:1831;;;1574:72;;1348:2069;:::o;14:127:56:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:944;214:6;267:2;255:9;246:7;242:23;238:32;235:52;;;283:1;280;273:12;235:52;323:9;310:23;356:18;348:6;345:30;342:50;;;388:1;385;378:12;342:50;411:22;;464:4;456:13;;452:27;-1:-1:-1;442:55:56;;493:1;490;483:12;442:55;533:2;520:16;559:18;551:6;548:30;545:56;;;581:18;;:::i;:::-;630:2;624:9;722:2;684:17;;-1:-1:-1;;680:31:56;;;713:2;676:40;672:54;660:67;;757:18;742:34;;778:22;;;739:62;736:88;;;804:18;;:::i;:::-;840:2;833:22;864;;;905:15;;;922:2;901:24;898:37;-1:-1:-1;895:57:56;;;948:1;945;938:12;895:57;1004:6;999:2;995;991:11;986:2;978:6;974:15;961:50;1057:1;1031:19;;;1052:2;1027:28;1020:39;;;;1035:6;146:944;-1:-1:-1;;;;146:944:56:o","linkReferences":{}},"methodIdentifiers":{"multiSend(bytes)":"8d80ff0a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"transactions\",\"type\":\"bytes\"}],\"name\":\"multiSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Stefan George - @Georgi87Richard Meissner - @rmeissner\",\"kind\":\"dev\",\"methods\":{\"multiSend(bytes)\":{\"details\":\"Sends multiple transactions and reverts all if one fails.\",\"params\":{\"transactions\":\"Encoded transactions. Each transaction is encoded as a packed bytes of                     operation has to be uint8(0) in this version (=> 1 byte),                     to as a address (=> 20 bytes),                     value as a uint256 (=> 32 bytes),                     data length as a uint256 (=> 32 bytes),                     data as bytes.                     see abi.encodePacked for more information on packed encoding\"}}},\"title\":\"Multi Send Call Only - Allows to batch multiple transactions into one, but only calls\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multiSend(bytes)\":{\"notice\":\"The code is for most part the same as the normal MultiSend (to keep compatibility),         but reverts if a transaction tries to use a delegatecall.This method is payable as delegatecalls keep the msg.value from the previous call         If the calling method (e.g. execTransaction) received ETH this would revert otherwise\"}},\"notice\":\"The guard logic is not required here as this contract doesn't support nested delegate calls\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-smart-account/contracts/libraries/MultiSendCallOnly.sol\":\"MultiSendCallOnly\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":safe-smart-account/=lib/safe-smart-account/contracts/\"]},\"sources\":{\"lib/safe-smart-account/contracts/libraries/MultiSendCallOnly.sol\":{\"keccak256\":\"0x66c326b0845b97c2ecef741eab1f3121630c1e1e04b6b369ab9faa4410dc33cd\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b251404bb90d97ae2eb04f802007b6337c26a7f3dfb0253352a15878f86e4771\",\"dweb:/ipfs/QmUe2mgmRm4pyBfUfzERiHQJcvrb1qkKthRQCJNEkLF8SG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"transactions","type":"bytes"}],"stateMutability":"payable","type":"function","name":"multiSend"}],"devdoc":{"kind":"dev","methods":{"multiSend(bytes)":{"details":"Sends multiple transactions and reverts all if one fails.","params":{"transactions":"Encoded transactions. Each transaction is encoded as a packed bytes of                     operation has to be uint8(0) in this version (=> 1 byte),                     to as a address (=> 20 bytes),                     value as a uint256 (=> 32 bytes),                     data length as a uint256 (=> 32 bytes),                     data as bytes.                     see abi.encodePacked for more information on packed encoding"}}},"version":1},"userdoc":{"kind":"user","methods":{"multiSend(bytes)":{"notice":"The code is for most part the same as the normal MultiSend (to keep compatibility),         but reverts if a transaction tries to use a delegatecall.This method is payable as delegatecalls keep the msg.value from the previous call         If the calling method (e.g. execTransaction) received ETH this would revert otherwise"}},"version":1}},"settings":{"remappings":["erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","safe-smart-account/=lib/safe-smart-account/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/safe-smart-account/contracts/libraries/MultiSendCallOnly.sol":"MultiSendCallOnly"},"evmVersion":"berlin","libraries":{}},"sources":{"lib/safe-smart-account/contracts/libraries/MultiSendCallOnly.sol":{"keccak256":"0x66c326b0845b97c2ecef741eab1f3121630c1e1e04b6b369ab9faa4410dc33cd","urls":["bzz-raw://b251404bb90d97ae2eb04f802007b6337c26a7f3dfb0253352a15878f86e4771","dweb:/ipfs/QmUe2mgmRm4pyBfUfzERiHQJcvrb1qkKthRQCJNEkLF8SG"],"license":"LGPL-3.0-only"}},"version":1},"id":45}